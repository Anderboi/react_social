{"version":3,"file":"static/js/692.51da54f6.chunk.js","mappings":"6LACA,GAAgB,SAAW,2BAA2B,kBAAoB,oCAAoC,oBAAsB,sCAAsC,+BAAiC,iDAAiD,oCAAsC,sDAAsD,wBAA0B,2C,6EC2BlX,EAjB4C,SAACA,GAC3C,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,gBAAhB,WACE,kBAAOC,QAASH,EAAMI,UAAtB,SAAkCJ,EAAMK,aACxC,kBACEC,MAAON,EAAMM,MACbC,KAAMP,EAAMO,KACZC,KAAMR,EAAMI,UACZK,GAAIT,EAAMI,UACVH,UAAWS,EAAAA,EAAAA,MACXC,YAAaX,EAAMW,kBCE3B,EAd+C,SAACX,GAC9C,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,gBAAhB,WACE,kBAAOC,QAASH,EAAMI,UAAtB,SAAkCJ,EAAMK,aACxC,qBACEC,MAAON,EAAMM,MACbE,KAAMR,EAAMI,UACZK,GAAIT,EAAMI,UACVH,UAAS,UAAKS,EAAAA,EAAAA,MAAL,YAAqBR,EAAAA,EAAAA,gCCOtC,EAf+C,SAACF,GAC9C,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,yBAAhB,WACE,kBACEU,QAASZ,EAAMM,MACfC,KAAK,WACLC,KAAMR,EAAMI,UACZK,GAAIT,EAAMI,UACVH,UAAWS,EAAAA,EAAAA,YAEb,kBAAOP,QAASH,EAAMI,UAAtB,SAAkCJ,EAAMK,gBCoBxCQ,EAAoC,SAACb,GAAwB,IAAD,UAChE,GAAgCc,EAAAA,EAAAA,UAAQ,UAACd,EAAMe,gBAAP,aAAC,EAAgBC,UAAzD,eAAOA,EAAP,KACA,GADA,MACsCF,EAAAA,EAAAA,UAAQ,UAC5Cd,EAAMe,gBADsC,aAC5C,EAAgBE,4BADlB,eAAOC,EAAP,KAGA,GAHA,MAGkCJ,EAAAA,EAAAA,UAAQ,UAACd,EAAMe,gBAAP,aAAC,EAAgBI,iBAA3D,eAAOC,EAAP,UAEA,OACE,iBAAKnB,UAAWC,EAAAA,SAAhB,WACE,iBAAKD,UAAWC,EAAAA,kBAAhB,WACE,sCACA,iBAAKD,UAAWC,EAAAA,wBAAhB,WACE,kDACA,yCACA,6CAGJ,iBAAKD,UAAWC,EAAAA,oBAAhB,WACE,kDACA,eAAID,UAAWC,EAAAA,+BACf,qCACA,yGAIA,iBAAKD,UAAWC,EAAAA,+BAAhB,WACE,SAAC,EAAD,CACEK,KAAK,OACLF,UAAU,YACVD,UAAU,YACVE,MAAOU,GACF,cAEP,SAAC,EAAD,CACET,KAAK,OACLF,UAAU,YACVD,UAAU,YACVE,MAAK,UAAEN,EAAMe,gBAAR,iBAAE,EAAgBM,gBAAlB,aAAE,EAA0BC,SAC5B,cAGP,SAAC,EAAD,CACElB,UAAU,YACVC,UAAU,wBACVC,MAAOc,KAGT,SAAC,EAAD,CACEf,UAAU,SACVD,UAAU,cACVE,MAAOY,GACF,cAGT,kBAAOX,KAAK,SAASD,MAAM,OAAOL,UAAWS,EAAAA,EAAAA,gBAarD,GAAea,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KARsB,SAACC,GACvB,MAAO,CACLC,aAAaC,EAAAA,EAAAA,IAAYF,GACzBG,QAAQC,EAAAA,EAAAA,IAAUJ,MAOlB,CAAEK,iBAAAA,EAAAA,KAHN,EA/E2C,SAAC9B,GAK1C,OAJA+B,EAAAA,EAAAA,YAAU,WACR/B,EAAM8B,iBAAiB9B,EAAM4B,UAC5B,CAAC5B,EAAM4B,UAEH,SAACf,EAAD,CAAUE,SAAUf,EAAM0B","sources":["webpack://react-project-01/./src/components/Settings/Settings.module.css?96b0","components/common/Inputs/InputWithLabel.tsx","components/common/Inputs/TextareaWithLabel.tsx","components/common/Inputs/CheckboxWithLabel.tsx","components/Settings/Settings.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"settings\":\"Settings_settings__lY+xN\",\"settings__submenu\":\"Settings_settings__submenu__eYp4q\",\"settings__infoblock\":\"Settings_settings__infoblock__gth76\",\"settings__infoblock_inputblock\":\"Settings_settings__infoblock_inputblock__AZZnO\",\"settings__infoblock_inputblock_item\":\"Settings_settings__infoblock_inputblock_item__RvXK4\",\"settings__submenu_items\":\"Settings_settings__submenu_items__S0Ij5\"};","import css from \"./Inputs.module.css\";\r\nimport common from \"../../../Common.module.css\";\r\n\r\ntype InputType = {\r\n  inputName: string;\r\n  type: \"text\" | \"email\" | \"date\";\r\n  value: string;\r\n  labelText: string;\r\n  placeholder?: string;\r\n};\r\n\r\nconst InputWithLabel: React.FC<InputType> = (props) => {\r\n  return (\r\n    <div className={css.inputblock_item}>\r\n      <label htmlFor={props.inputName}>{props.labelText}</label>\r\n      <input\r\n        value={props.value}\r\n        type={props.type}\r\n        name={props.inputName}\r\n        id={props.inputName}\r\n        className={common.input}\r\n        placeholder={props.placeholder}\r\n        \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputWithLabel;\r\n","import css from \"./Inputs.module.css\";\r\nimport common from \"../../../Common.module.css\";\r\n\r\ntype InputType = {\r\n  inputName: string;\r\n  value: string;\r\n  labelText: string;\r\n};\r\n\r\nconst TextareaWithLabel: React.FC<InputType> = (props) => {\r\n  return (\r\n    <div className={css.inputblock_item}>\r\n      <label htmlFor={props.inputName}>{props.labelText}</label>\r\n      <textarea\r\n        value={props.value}\r\n        name={props.inputName}\r\n        id={props.inputName}\r\n        className={`${common.input} ${css.inputblock_item_textarea}`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextareaWithLabel;\r\n","import css from \"./Inputs.module.css\";\r\nimport common from \"../../../Common.module.css\";\r\n\r\ntype InputType = {\r\n  inputName: string;\r\n  value: boolean;\r\n  labelText: string;\r\n};\r\n\r\nconst CheckboxWithLabel: React.FC<InputType> = (props) => {\r\n  return (\r\n    <div className={css.inputblock_item_checkbox}>\r\n      <input\r\n        checked={props.value}\r\n        type=\"checkbox\"\r\n        name={props.inputName}\r\n        id={props.inputName}\r\n        className={common.checkbox}\r\n      />\r\n      <label htmlFor={props.inputName}>{props.labelText}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckboxWithLabel;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport css from \"./Settings.module.css\";\r\nimport common from \"../../Common.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserInfo } from \"../../utilities/selectors/profileSelector\";\r\nimport { RootState } from \"../../redux/reduxStore\";\r\nimport { IUserInfo } from \"../../types/types\";\r\nimport { compose } from \"redux\";\r\nimport { getUserProfileTC } from \"../../redux/mainPageReducer\";\r\nimport { getAuthId } from \"../../utilities/selectors/authSelector\";\r\nimport InputWithLabel from \"../common/Inputs/InputWithLabel\";\r\nimport TextareaWithLabel from \"../common/Inputs/TextareaWithLabel\";\r\nimport CheckboxWithLabel from \"../common/Inputs/CheckboxWithLabel\";\r\n\r\ntype MapStateToProps = {\r\n  profileInfo: IUserInfo | null;\r\n  userId: number | null;\r\n};\r\n\r\ntype MapDispatchToProps = {\r\n  getUserProfileTC: (userId: number) => void;\r\n};\r\n\r\ntype OwnProps = {};\r\n\r\ntype Props = MapStateToProps & MapDispatchToProps & OwnProps;\r\n\r\nconst SettingsContainer: React.FC<Props> = (props): JSX.Element => {\r\n  useEffect(() => {\r\n    props.getUserProfileTC(props.userId!);\r\n  }, [props.userId]);\r\n\r\n  return <Settings userInfo={props.profileInfo} />;\r\n};\r\n\r\ntype SettingsProps = {\r\n  userInfo: IUserInfo | null;\r\n};\r\n\r\nconst Settings: React.FC<SettingsProps> = (props): JSX.Element => {\r\n  const [fullName, getFullName] = useState(props.userInfo?.fullName);\r\n  const [skillsSteck, getSkillsSteck] = useState(\r\n    props.userInfo?.lookingForAJobDescription\r\n  );\r\n  const [isLooking, getIsLooking] = useState(props.userInfo?.lookingForAJob);\r\n\r\n  return (\r\n    <div className={css.settings}>\r\n      <div className={css.settings__submenu}>\r\n        <h1>Settings</h1>\r\n        <div className={css.settings__submenu_items}>\r\n          <div>Profile information</div>\r\n          <div>Appearance</div>\r\n          <div>Security</div>\r\n        </div>\r\n      </div>\r\n      <div className={css.settings__infoblock}>\r\n        <h2>Personal Information</h2>\r\n        <hr className={css.settings__infoblock_divider} />\r\n        <h4>Profile</h4>\r\n        <span>\r\n          This information will be displayed publicly so be careful what you\r\n          share.\r\n        </span>\r\n        <div className={css.settings__infoblock_inputblock}>\r\n          <InputWithLabel\r\n            type=\"text\"\r\n            labelText=\"Full name\"\r\n            inputName=\"firstName\"\r\n            value={fullName!}\r\n            key={\"firstName\"}\r\n          />\r\n          <InputWithLabel\r\n            type=\"text\"\r\n            labelText=\"Full name\"\r\n            inputName=\"firstName\"\r\n            value={props.userInfo?.contacts?.website!}\r\n            key={\"firstName\"}\r\n          />\r\n\r\n          <CheckboxWithLabel\r\n            inputName=\"JobSearch\"\r\n            labelText=\"Search for employment\"\r\n            value={isLooking!}\r\n          />\r\n\r\n          <TextareaWithLabel\r\n            labelText=\"Skills\"\r\n            inputName=\"skillsSteck\"\r\n            value={skillsSteck!}\r\n            key={\"Skills\"}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save\" className={common.button} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToProps => {\r\n  return {\r\n    profileInfo: getUserInfo(state),\r\n    userId: getAuthId(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect<MapStateToProps, MapDispatchToProps, OwnProps, RootState>(\r\n    mapStateToProps,\r\n    { getUserProfileTC }\r\n  )\r\n)(SettingsContainer);\r\n"],"names":["props","className","css","htmlFor","inputName","labelText","value","type","name","id","common","placeholder","checked","Settings","useState","userInfo","fullName","lookingForAJobDescription","skillsSteck","lookingForAJob","isLooking","contacts","website","compose","connect","state","profileInfo","getUserInfo","userId","getAuthId","getUserProfileTC","useEffect"],"sourceRoot":""}