{"version":3,"file":"static/js/635.515d5a59.chunk.js","mappings":"8OAiIA,WAAeA,EAAAA,EAAAA,KANS,SAACC,GACvB,MAAO,CACLC,aAAaC,EAAAA,EAAAA,IAAeF,MAIhC,EAtGkC,WAAoB,IAAD,QACnD,GAMIG,EAAAA,EAAAA,IAAoB,CAAEC,KAAM,WAL9BC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,MAJF,IAKEC,UAAaC,EALf,EAKeA,OAAQC,EALvB,EAKuBA,QAGjBC,GAAWC,EAAAA,EAAAA,QAAO,IACxBD,EAASE,QAAUP,EAAM,WAAY,IAErC,IAAMQ,EAAsC,SAAAC,GAC1CC,QAAQC,IAAIF,GACZR,KAGF,OACE,iBAAKW,UAAWC,EAAAA,EAAAA,KAAhB,WACE,4CACA,kBAAML,SAAUT,EAAaS,GAA7B,WACE,qBAASI,UAAWE,EAAAA,EAAAA,gBAApB,WACE,4CACA,oCACMhB,EAAS,WAAY,CACvBiB,SAAU,mBACVC,UAAW,CACTC,MAAO,EACPC,QAAS,sCALf,IAQEN,UAAWO,EAAAA,EAAAA,UAGb,gBAAKP,UAAWO,EAAAA,EAAAA,cAAhB,mBAAuChB,EAAOiB,gBAA9C,aAAuC,EAAiBF,cAE1D,qBAASN,UAAWE,EAAAA,EAAAA,gBAApB,WACE,wCACA,oCACMhB,EAAS,QAAS,CACpBiB,SAAU,oBACVM,QAAS,CACPJ,MAAO,mCACPC,QAAS,0BALf,IAQEN,UAAWO,EAAAA,EAAAA,UAGb,gBAAKP,UAAWO,EAAAA,EAAAA,cAAhB,mBAAuChB,EAAOmB,aAA9C,aAAuC,EAAcJ,cAEvD,qBAASN,UAAWE,EAAAA,EAAAA,gBAApB,WACE,0CACA,kCACEF,UAAWO,EAAAA,EAAAA,OACPrB,EAAS,WAAY,CACvBiB,SAAU,8BACVC,UAAW,CACTC,MAAO,EACPC,QAAS,gDANf,IASEK,KAAK,eAGP,gBAAKX,UAAWO,EAAAA,EAAAA,cAAhB,mBAAuChB,EAAOE,gBAA9C,aAAuC,EAAiBa,cAE1D,qBAASN,UAAWE,EAAAA,EAAAA,gBAApB,WACE,kDACA,kCACEF,UAAWO,EAAAA,EAAAA,OACPrB,EAAS,kBAAmB,CAC9B0B,KAAM,CAAC,YACPC,SAAU,CACRC,MAAO,SAACT,GAAD,OACLA,IAAUZ,EAASE,SAAW,kCANtC,IASEgB,KAAK,eAEP,gBAAKX,UAAWO,EAAAA,EAAAA,cAAhB,mBACGhB,EAAOwB,uBADV,aACG,EAAwBT,cAG7B,kBACEK,KAAK,SACLX,UAAWgB,GAAAA,CAAGT,EAAAA,EAAAA,OAAeA,EAAAA,EAAAA,cAC7BF,MAAM,UACNT,SAAUT,EAAaS,GACvBqB,UAAWzB","sources":["components/Register/Register.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport common from \"../../Common.module.css\";\r\nimport form from \"../common/Inputs/Forms.module.css\";\r\nimport input from \"../common/Inputs/Inputs.module.css\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport cn from \"classnames\";\r\nimport { getAuthMessage } from \"../../utilities/selectors/authSelector\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reduxStore\";\r\n\r\ntype MapStateToProps = {\r\n  authMessage: string | null;\r\n};\r\n\r\ntype MapDispatchToProps = {};\r\n\r\ntype OwnProps = {};\r\n\r\ntype Props = MapStateToProps & MapDispatchToProps & OwnProps;\r\n\r\ntype FormValues = {\r\n  fullName: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n};\r\n\r\nconst Register: React.FC<Props> = (): JSX.Element => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    reset,\r\n    formState: { errors, isValid },\r\n  } = useForm<FormValues>({ mode: \"onBlur\" });\r\n\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n  const onSubmit:SubmitHandler <FormValues> = data => {\r\n    console.log(data);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className={form.form}>\r\n      <h1>Create Account</h1>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <section className={input.inputblock_item}>\r\n          <label>User name: </label>\r\n          <input\r\n            {...register(\"fullName\", {\r\n              required: \"Name is required\",\r\n              minLength: {\r\n                value: 3,\r\n                message: \"Minimum length is 3 characters.\",\r\n              },\r\n            })}\r\n            className={common.input}\r\n          />\r\n\r\n          <div className={common.error_message}>{errors.fullName?.message}</div>\r\n        </section>\r\n        <section className={input.inputblock_item}>\r\n          <label>Email: </label>\r\n          <input\r\n            {...register(\"email\", {\r\n              required: \"Email is required\",\r\n              pattern: {\r\n                value: /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/,\r\n                message: \"Enter correct email\",\r\n              },\r\n            })}\r\n            className={common.input}\r\n          />\r\n\r\n          <div className={common.error_message}>{errors.email?.message}</div>\r\n        </section>\r\n        <section className={input.inputblock_item}>\r\n          <label>Password:</label>\r\n          <input\r\n            className={common.input}\r\n            {...register(\"password\", {\r\n              required: \"You must specify a password\",\r\n              minLength: {\r\n                value: 6,\r\n                message: \"Password must have at least 6 characters.\",\r\n              },\r\n            })}\r\n            type=\"password\"\r\n          />\r\n\r\n          <div className={common.error_message}>{errors.password?.message}</div>\r\n        </section>\r\n        <section className={input.inputblock_item}>\r\n          <label>Confirm password:</label>\r\n          <input\r\n            className={common.input}\r\n            {...register(\"confirmPassword\", {\r\n              deps: [\"password\"],\r\n              validate: {\r\n                equal: (value) =>\r\n                  value === password.current || \"The passwords do not match\",\r\n              },\r\n            })}\r\n            type=\"password\"\r\n          />\r\n          <div className={common.error_message}>\r\n            {errors.confirmPassword?.message}\r\n          </div>\r\n        </section>\r\n        <input\r\n          type=\"submit\"\r\n          className={cn(common.button, common.submitButton)}\r\n          value=\"SIGN UP\"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          disabled={!isValid}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState): MapStateToProps => {\r\n  return {\r\n    authMessage: getAuthMessage(state),\r\n  };\r\n};\r\n\r\nexport default connect<\r\n  MapStateToProps,\r\n  MapDispatchToProps,\r\n  OwnProps,\r\n  RootState\r\n>(mapStateToProps)(Register);\r\n"],"names":["connect","state","authMessage","getAuthMessage","useForm","mode","register","handleSubmit","watch","reset","formState","errors","isValid","password","useRef","current","onSubmit","data","console","log","className","form","input","required","minLength","value","message","common","fullName","pattern","email","type","deps","validate","equal","confirmPassword","cn","disabled"],"sourceRoot":""}